"""
author:康镇冲
description:
api_path:
api_doc:
"""
import hashlib
import json
import datetime
import rsa
import jsonpickle
import requests
import Crypto.PublicKey.RSA
import Crypto.Random

# x = Crypto.PublicKey.RSA.generate(2048)
# a = x.exportKey("PEM")  # 生成私钥
# b = x.publickey().exportKey()  # 生成公钥
# print(b)

my_private_key = rsa.PrivateKey(
    115052274783034571192322482165612504610854827880237262769012553652009288070436508648603961059088220335392805986657072868325983803871103322220572478149179893127701437082982116775029260117971198771237997025876323375700317059076419371522020315320186154693607091173374131486359363544270152505030385197840579446649,
    65537,
    107433267618251776145636189344782160377656635210444173057589777466805200147191708802182226908967786439187536017294854636662423224216853228099125247920700435145161581810178425276054419378681877488715044019187006807098659275640715120425893560132262107276446942785229792574657048338875554737060274512596457593089,
    42033374470997393501161287584702963182390379152146567023573650435450712713791034967222085854487391222995827552398349225213507379410212831523981356271908235251895777,
    2737164841771613792765573088097653017671951383208795227286413830748920588491615286643275805117039133232308680772375102742274303732213212137667737)
my_public_key = rsa.PublicKey(
    115052274783034571192322482165612504610854827880237262769012553652009288070436508648603961059088220335392805986657072868325983803871103322220572478149179893127701437082982116775029260117971198771237997025876323375700317059076419371522020315320186154693607091173374131486359363544270152505030385197840579446649,
    65537)

data_1 = 'fdasf'
data_2 = rsa.sign(data_1.encode(), my_private_key, 'SHA-1')
print(data_2)
print(rsa.verify(data_1.encode(),data_2,my_public_key))

# transcript = {"math": "70"}
# json_transcirpt = json.dumps(transcript, sort_keys=True).encode()
# en_data = rsa.encrypt(json_transcirpt, my_public_key).hex()
# print(en_data)
# print(rsa.decrypt(en_data,my_private_key))
# print(bytes.fromhex(en_data.hex()))
#
